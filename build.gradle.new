plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'swt-repo'
        url = 'https://maven-eclipse.github.io/maven'
    }
    maven {
        name = 'meteor-maven'
        url = 'https://maven.meteordev.org/releases'
    }
    maven {
        name = 'meteor-maven-snapshots'
        url = 'https://maven.meteordev.org/snapshots'
    }
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/thunderhack.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // Include Orbit in the jar (will be shaded)
    implementation "meteordevelopment:orbit:0.2.3"
    
    modCompileOnly "meteordevelopment:baritone:1.21-SNAPSHOT"
    implementation("io.netty:netty-handler-proxy:${project.netty_version}") { transitive = false }
    implementation("io.netty:netty-codec-socks:${project.netty_version}") { transitive = false }
}

// Shade only Orbit into the jar
shadowJar {
    configurations = []  // Don't include any dependencies by default
    archiveClassifier.set('')  // Remove the 'all' classifier
    
    // Only include Orbit
    dependencies {
        include(dependency('meteordevelopment:orbit:0.2.3'))
    }
    
    // Exclude everything else
    exclude('**/*.html')
    exclude('**/*.txt')
    exclude('META-INF/maven/**')
    exclude('META-INF/versions/**')
    exclude('io/netty/**')
    exclude('org/apache/**')
    exclude('com/google/**')
    exclude('org/fabricmc/**')
    exclude('meteordevelopment/baritone/**')
    
    // Merge with the main jar
    mergeServiceFiles()
    minimize()
}

// Make shadowJar the default jar task
tasks.named('jar').configure {
    dependsOn tasks.shadowJar
    enabled = false
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"
    
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
}

// Utilities task for copying dependencies
task copyDeps(type: Copy) {
    from {
        configurations.runtimeClasspath + configurations.modImpl + configurations.modCompileOnly
    }
    into 'libs'
}
